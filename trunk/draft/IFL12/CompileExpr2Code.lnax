%include lhs2TeX.fmt
%include includelhs2tex.lhs



\begin{code}
-- Nax implementation of Conor McBride's ICFP 2012 example:
-- a type preserving evalutor (|eval : Expr {t} -> Val {t}|) and
-- a safe compiler (|compile : Expr {t} -> Code {sc} {sc'}|)
-- whose generated code is indexed by stack configurations
-- before (|sc|) and after (|sc'|) running the generated code.

data Ty = I | B

data Val : Ty -> * where
  IV  : Nat -> Val {I}
  BV  : Bool -> Val {B}

plusV (IV n) (IV m) = IV (n + m)

ifV (BV b) v1 v2 = if b then v1 else v2


data E : (Ty -> *) -> (Ty -> *) where
  VAL   : Val {t} -> E r {t}
  PLUS  : r {I} -> r {I} -> E r {I}
  IF    : r {B} -> r {t} -> r {t} -> E r {t}
    deriving fixpoint Expr

eval e =  mcata { {t} . Val {t} } e with
            ev (VAL v)        = v
            ev (PLUS e1 e2)   = plusV (ev e1) (ev e2)
            ev (IF e0 e1 e2)  = ifV (ev e0) (ev e1) (ev e2)

data GL :  (List Ty -> List Ty -> *) ->
           (List Ty -> List Ty -> *) -> (List Ty -> List Ty -> *)
  where  GNil   : GL x r i i
         GCons  : x i j -> r j k -> GL x r i k
            deriving fixpoint GList

append l =
  mcata { {i} {j} . GList f {j} {k} -> GList f {i} {k} } l
    with  app GNil          ys  = ys
          app (GCons x xs)  ys  = gCons x (app xs ys)

data Instr :  (List Ty -> List Ty -> *) ->
              (List Ty -> List Ty -> *) where
  PUSH   :  Val {t} -> Instr r {ts} {`cons t ts}
  ADD    :  Instr r {`cons I (`cons I ts)} {`cons I ts}
  IFPOP  :  GList r {ts} {ts'} -> GList r {ts} {ts'} ->
            Instr r {`cons B ts} {ts'}
    deriving fixpoint Inst

synonym  Code sc sc' =  GList (Mu[List Ty -> List Ty -> *] Instr) {sc} {sc'}
                        {-"$\;\phantom{GGGGGGGGfm}$"-} -- |GList Inst {sc} {sc'}|

compile e =
  mcata { {t} . Code {ts} {`cons t ts} } e with
    cmpl (VAL v)        = gCons (pUSH v) gNil
    cmpl (PLUS e1 e2)   = append  (append (cmpl e1) (cmpl e2))
                                  (gCons aDD gNil)
    cmpl (IF e0 e1 e2)  = append  (cmpl e0)
                                  (gCons (iFPOP (cmpl e1) (cmpl e2)) gNil)


\end{code}
